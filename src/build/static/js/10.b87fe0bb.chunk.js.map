{"version":3,"sources":["../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","@core/components/avatar/index.js","assets/images/lobby/slot-lock.png","component/GamePreviewItem.js","views/Home.js"],"names":["rowColsPropType","PropTypes","oneOfType","number","string","propTypes","tag","tagPropType","noGutters","bool","className","cssModule","object","form","xs","sm","md","lg","xl","defaultProps","widths","Row","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","colWidth","i","colSize","isXs","push","classes","mapToCssModules","classNames","React","createElement","_extends","stringOrNumberProp","columnProps","shape","size","order","offset","array","getColumnSizeClass","Col","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","length","Avatar","forwardRef","ref","color","imgClassName","initials","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","contentStyles","rest","classnames","undefined","style","str","results","split","e","join","getInitials","pill","src","alt","height","width","GamePreviewItem","item","history","useHistory","userData","useSelector","state","auth","useState","isLoading","setIsLoading","useEffect","setTimeout","ErrorToast","title","desc","name","level","to","onClick","useJwt","playGame","then","res","data","toast","error","transition","Slide","hideProgressBar","autoClose","catch","err","console","log","id","draggable","image","require","default","Home","games","setGames","loadGameList","map","key"],"mappings":"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","file":"static/js/10.b87fe0bb.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","export default __webpack_public_path__ + \"static/media/slot-lock.df843c81.png\";","import { Fragment, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Col } from 'reactstrap'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport Avatar from '@components/avatar'\nimport { X } from 'react-feather'\nimport { toast, Slide } from 'react-toastify'\n\nconst GamePreviewItem = ({item}) => {\n  const history = useHistory()\n  const { userData } = useSelector(state => state.auth)\n  const [isLoading, setIsLoading] = useState(true)\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 2000)\n  }, [])\n\n  const ErrorToast = ({title, desc}) => (\n    <Fragment>\n      <div className='toastify-header'>\n        <div className='title-wrapper'>\n          <Avatar size='sm' color='danger' icon={<X size={12} />} />\n          <h6 className='text-danger ml-50 mb-0'>{title}</h6>\n        </div>\n      </div>\n      <div className='toastify-body'>\n        <span>{desc}</span>\n      </div>\n    </Fragment>\n  )\n\n  const play = () => {\n    // console.log(item)\n    useJwt\n      .playGame(item)\n      .then(res => {\n        if (res.data.status) {\n          history.push('/play', res.data.data)\n        } else {\n          toast.error(<ErrorToast desc={`error`} title={`Error`} />, { transition: Slide, hideProgressBar: true, autoClose: 2000 })\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  if (isLoading) {\n    return (\n      <Col xs={3} className='p-1'>\n        <div className=\"skeleton-item\" name=\"game-preview-skeleton\"></div>\n      </Col>\n    )\n  }\n\n  if (userData.level >= item.level) {\n    return (\n      <Col xs={3} className='p-1'>\n        <div className=\"slot-item w-100 h-100 position-relative\">\n          <Link to='#' onClick={play}>\n            <div className=\"slot-img-container w-100 position-relative golden-frame\">\n              <div id=\"frame-hover\" className=\"dead-center w-100 h-100\"></div>\n              <div className=\"deco-corners\">\n                <div className=\"small-gold deco-corner top-left\"></div>\n                <div className=\"small-gold deco-corner top-right\"></div>\n                <div className=\"small-gold deco-corner bottom-right\"></div>\n                <div className=\"small-gold deco-corner bottom-left\"></div>\n              </div>\n              <img draggable=\"false\" className=\"slot-img\" src={item.image}/>\n            </div>\n            <div className=\"game-title-field w-100 text-center text-uppercase d-flex align-items-center justify-content-center\">\n              {item.title}\n            </div>\n            {/* <div className=\"jackpot-line-container w-100 d-inline-flex align-items-center justify-content-around\">\n              <div className=\"jackpot-amount bold text-uppercase\">\n                {4} <span className=\"jackpot-word\">Jackpots</span>\n              </div>\n              <div className=\"jackpot-size text-white bold\">\n                {1000}\n              </div>\n              <img src={require('@src/assets/images/lobby/gold.png').default} draggable=\"false\" alt=\"gold\"/>\n            </div> */}\n            {/* <div className=\"fire-container to-center-abs\">\n              <img src={require('@src/assets/images/lobby/jackpot-hotness-animation-realflames.gif').default} className=\"w-100\"/>\n            </div>\n            <div className=\"jackpot-hotness-container golden-border to-center-abs\">\n              <div className=\"jackpot-hotness-fill to-center-abs\">\n                <div className=\"diagram-container\">\n                  <div className=\"diagram-filler flames\" style={{width:'100%'}}></div>\n                </div>\n                <div className=\"jackpot-hotness-text\">120°</div>\n              </div>\n            </div> */}\n          </Link>\n        </div>\n      </Col>\n    )\n  } else {\n    return (\n      <Col xs={3} className='p-1'>\n        <div className=\"slot-item w-100 h-100 position-relative\">\n          <div>\n            <div className=\"lock-text bold text-uppercase text-center to-center-abs\">\n              From Level {item.level} \n              </div>\n            <div className=\"lock dead-center\">\n              <img src={require('@src/assets/images/lobby/slot-lock.png').default} className=\"w-100\" />\n            </div>\n          </div>\n          <div className=\"game-locked dead-center\"></div>\n          <Link to='#'>\n            <div className=\"slot-img-container w-100 position-relative golden-frame\">\n              <div id=\"frame-hover\" className=\"dead-center w-100 h-100\"></div>\n              <div className=\"deco-corners\">\n                <div className=\"small-gold deco-corner top-left\"></div>\n                <div className=\"small-gold deco-corner top-right\"></div>\n                <div className=\"small-gold deco-corner bottom-right\"></div>\n                <div className=\"small-gold deco-corner bottom-left\"></div>\n              </div>\n              <img draggable=\"false\" className=\"slot-img locked-game\" src={item.image}/>\n            </div>\n            <div className=\"game-title-field w-100 text-center text-uppercase d-flex align-items-center justify-content-center\">\n              {item.title}\n            </div>\n            {/* <div className=\"jackpot-line-container w-100 d-inline-flex align-items-center justify-content-around\">\n              <div className=\"jackpot-amount bold text-uppercase\">\n                {4} <span className=\"jackpot-word\">Jackpots</span>\n              </div>\n              <div className=\"jackpot-size text-white bold\">\n                {1000}\n              </div>\n              <img src={require('@src/assets/images/lobby/gold.png').default} draggable=\"false\" alt=\"gold\"/>\n            </div> */}\n            {/* <div className=\"fire-container to-center-abs\">\n              <img src={require('@src/assets/images/lobby/jackpot-hotness-animation-realflames.gif').default} className=\"w-100\"/>\n            </div>\n            <div className=\"jackpot-hotness-container golden-border to-center-abs\">\n              <div className=\"jackpot-hotness-fill to-center-abs\">\n                <div className=\"diagram-container\">\n                  <div className=\"diagram-filler flames\" style={{width:'100%'}}></div>\n                </div>\n                <div className=\"jackpot-hotness-text\">120°</div>\n              </div>\n            </div> */}\n          </Link>\n        </div>\n      </Col>\n    )\n  }\n}\n\nexport default GamePreviewItem\n","import { useEffect, useState } from 'react'\nimport {Row} from 'reactstrap'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport GamePreviewItem from '../component/GamePreviewItem'\nconst Home = () => {\n  const [games, setGames] = useState([])\n  \n  const loadGameList = () => {\n    useJwt\n    .loadGameList()\n    .then(res => {\n      if (res.data.status) {\n        setGames(res.data.data)\n      }\n    })\n    .catch(err => console.log(err))\n  }\n  \n  useEffect(() => {\n    loadGameList()\n  }, [])\n\n  return (\n    <div id='lobby-page'>\n      <div id=\"lobby-content-container\" className=\"container-fluid\">\n        <Row className='justify-content-center m-0'>\n          {\n            games.map((item, key) => (\n              <GamePreviewItem key={key} item={item}/>\n            ))\n          }\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}